{"version":3,"sources":["components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","_this","props","deleteContact","_this2","this","_this$props$contact","contact","name","email","phone","react_default","a","createElement","className","onClick","setState","style","cursor","float","color","bind","Link","to","concat","marginRight","Component","connect","dispatch","axios","delete","then","response","type","payload","catch","error","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","get","data","console","log","TextInputGroup","_ref","label","value","placeholder","onChange","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","Object","defineProperty","target","_this$state2","layout_TextInputGroup","post","EditContact","updContact","match","params","updateContact","getContact","nextProps","nextState","_nextProps$contact","put","responce","Header","branding","href","About","NotFound","initialState","combineReducers","arguments","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f287e7b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { deleteContact } from \"../../actions/contactActions\";\nimport { connect } from \"react-redux\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4 className=\"lead\">\n          {name}{\" \"}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: \"pointer\" }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: \"pointer\",\n                float: \"right\",\n                color: \"gray\",\n                marginRight: \"1rem\"\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired\n};\n\n//we doesent require props here\n\nexport default connect(\n  null,\n  { deleteContact }\n)(Contact);\n","import {\r\n  GET_CONTACTS,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  GET_CONTACT,\r\n  UPDATE_CONTACT\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getContacts = () => dispatch => {\r\n  //here redux thunk works\r\n  axios\r\n    .get(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => dispatch({ type: GET_CONTACTS, payload: response.data }))\r\n    .catch(error => console.log(error));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  axios\r\n    .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    .then(response => dispatch({ type: DELETE_CONTACT, payload: id }))\r\n    .catch(error => dispatch({ type: DELETE_CONTACT, payload: id }));\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  axios\r\n    .post(\"https://jsonplaceholder.typicode.com/users\", contact)\r\n    .then(response => dispatch({ type: ADD_CONTACT, payload: response.data }))\r\n    .catch(error => console.log(error));\r\n};\r\n\r\nexport const getContact = id => dispatch => {\r\n  axios\r\n    .get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    .then(response => dispatch({ type: GET_CONTACT, payload: response.data }))\r\n    .catch(error => console.log(error));\r\n};\r\n\r\nexport const updateContact = contact => dispatch => {\r\n  axios\r\n    .put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact)\r\n    .then(responce =>\r\n      dispatch({ type: UPDATE_CONTACT, payload: responce.data })\r\n    )\r\n    .catch(error => console.log(error));\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../actions/contactActions\";\nimport PropTypes from \"prop-types\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\n//propname : pulling state from redux store\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   getContacts: () => dispatch({ type: GET_CONTACTS })\n// });\n\nexport default connect(\n  mapStateToProps,\n  { getContacts }\n)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../actions/contactActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addContact }\n)(AddContact);\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport { getContact, updateContact } from \"../../actions/contactActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getContact(this.props.match.params.id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    const { id, name, email, phone } = nextProps.contact;\r\n    this.setState({\r\n      id,\r\n      name,\r\n      email,\r\n      phone,\r\n      error: {}\r\n    });\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const updContact = {\r\n      id,\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    //// UPDATE CONTACT ////\r\n    this.props.updateContact(updContact);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              error={errors.email}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Enter Phone\"\r\n              value={phone}\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Contact\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contact: state.contact.contact\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getContact, updateContact }\r\n)(EditContact);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import {\r\n  GET_CONTACTS,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  GET_CONTACT,\r\n  UPDATE_CONTACT\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n    case DELETE_CONTACT:\r\n      console.log(\"delete contact reducer called!\");\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id == action.payload.id ? (contact = action.payload) : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}